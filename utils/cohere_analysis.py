import cohere
from config import COHERE_API_KEY
from utils import log


# üîë Conecta na API da Cohere
co = cohere.Client(COHERE_API_KEY)


def validar_sinal_com_ia(sinal):
    """
    Valida o sinal utilizando IA da Cohere.

    Args:
        sinal (dict): Dados do sinal com:
            - ativo
            - sinal (COMPRA ou VENDA)
            - tend√™ncia
            - indicadores (RSI, MACD, etc.)

    Returns:
        bool: True se a IA confirmar o sinal, False se rejeitar
    """

    prompt = gerar_prompt(sinal)

    try:
        resposta = co.generate(
            model='command-r',
            prompt=prompt,
            max_tokens=100,
            temperature=0.2
        )

        texto = resposta.generations[0].text.strip().lower()

        log(f"Resposta IA: {texto}")

        if "aceito" in texto or "confirmo" in texto or "v√°lido" in texto:
            return True
        else:
            return False

    except Exception as e:
        log(f"Erro na an√°lise Cohere: {e}", "error")
        return False


def gerar_prompt(sinal):
    """
    Gera o prompt de valida√ß√£o para a IA da Cohere.

    Args:
        sinal (dict): Dados do sinal

    Returns:
        str: Texto do prompt
    """
    prompt = f"""
Voc√™ √© um assistente especialista em trading e mercados financeiros.

Analise o seguinte sinal e me diga se ele √© um sinal confi√°vel para executar uma opera√ß√£o no mercado.

Dados do sinal:
- Ativo: {sinal['ativo']}
- Tipo: {sinal['sinal']}
- Tend√™ncia: {sinal['tendencia']}%
- Indicadores T√©cnicos:
  ‚Ä¢ RSI: {sinal.get('rsi')}
  ‚Ä¢ MACD: {sinal.get('macd')}
  ‚Ä¢ EMA: {sinal.get('ema')}
  ‚Ä¢ ADX: {sinal.get('adx')}
  ‚Ä¢ Bandas de Bollinger: {sinal.get('bollinger')}
  ‚Ä¢ Estoc√°stico: {sinal.get('stochastic')}

Baseado nesses dados, este sinal √© confi√°vel para abrir uma opera√ß√£o?

Responda de forma direta apenas com uma das op√ß√µes:
- Aceito, √© um sinal confi√°vel.
- Recusado, n√£o √© um sinal confi√°vel.

Explique em poucas palavras se desejar.
"""
    return prompt
